package Check::GlobalPhase;

use strict;
use warnings;

# ABSTRACT: Check::GlobalPhase fast XS checker for Perl GlobalPhase

# VERSION: generated by DZP::OurPkgVersion

use XSLoader;
XSLoader::load(__PACKAGE__);


1;
 __END__

=encoding utf-8

=head1 SYNOPSIS

# EXAMPLE: examples/synopsis.pl

=head1 DESCRIPTION

Check::GlobalPhase provides some fast helpers to check the current Perl Phase.
This is avoiding the creation of useless C<SvPV> to perform a string comparison
using C<${^GLOBAL_PHASE}>

View C<${^GLOBAL_PHASE}> from L<perlvar> for more details.

=head1 FUNCTIONS

=head2 in_global_phase_construct()

Return a boolean value. True if ${^GLOBAL_PHASE} eq 'CONSTRUCT'

=head2 in_global_phase_start()

Return a boolean value. True if ${^GLOBAL_PHASE} eq 'START'

=head2 in_global_phase_check()

Return a boolean value. True if ${^GLOBAL_PHASE} eq 'CHECK'

=head2 in_global_phase_init()

Return a boolean value. True if ${^GLOBAL_PHASE} eq 'INIT'

=head2 in_global_phase_run()

Return a boolean value. True if ${^GLOBAL_PHASE} eq 'RUN'

=head2 in_global_phase_end()

Return a boolean value. True if ${^GLOBAL_PHASE} eq 'END'

=head2 in_global_phase_destruct()

Return a boolean value. True if ${^GLOBAL_PHASE} eq 'DESTRUCT'

=head1 CONSTANTS

You can use this constant to perform some bitmask check with the current Perl_Phase
returned from L<current_phase>. (view synopsis)

=head2 PERL_PHASE_CONSTRUCT

=head2 PERL_PHASE_START

=head2 PERL_PHASE_CHECK

=head2 PERL_PHASE_INIT

=head2 PERL_PHASE_RUN

=head2 PERL_PHASE_END

=head2 PERL_PHASE_DESTRUCT
